"""add audit fields created_at and last_modified to doente and internamento

Revision ID: 32186512025c
Revises: 79ff48b99f04
Create Date: 2025-09-08 20:56:27.310993

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '32186512025c'
down_revision: Union[str, Sequence[str], None] = '79ff48b99f04'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema - SQLite compatible version using table recreation."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # SQLite approach: recreate tables with new schema
    # This is the only way to add NOT NULL columns with defaults in SQLite
    
    # Recreate doente table with audit fields
    op.execute("""
        CREATE TABLE doente_new (
            id INTEGER NOT NULL PRIMARY KEY,
            nome VARCHAR NOT NULL,
            numero_processo INTEGER NOT NULL UNIQUE,
            data_nascimento DATE,
            sexo VARCHAR NOT NULL,
            morada VARCHAR NOT NULL,
            created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
            last_modified DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
        )
    """)
    
    # Copy existing data with audit timestamps
    op.execute("""
        INSERT INTO doente_new (id, nome, numero_processo, data_nascimento, sexo, morada, created_at, last_modified)
        SELECT id, nome, numero_processo, data_nascimento, sexo, morada, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
        FROM doente
    """)
    
    # Drop old table and rename new one
    op.drop_table('doente')
    op.execute("ALTER TABLE doente_new RENAME TO doente")
    
    # Recreate internamento table with audit fields
    op.execute("""
        CREATE TABLE internamento_new (
            id INTEGER NOT NULL PRIMARY KEY,
            numero_internamento INTEGER NOT NULL UNIQUE,
            data_entrada DATE,
            data_alta DATE,
            data_queimadura DATE,
            origem_entrada INTEGER,
            destino_alta INTEGER,
            "ASCQ_total" INTEGER,
            lesao_inalatoria VARCHAR,
            mecanismo_queimadura INTEGER,
            agente_queimadura INTEGER,
            tipo_acidente INTEGER,
            incendio_florestal BOOLEAN,
            contexto_violento VARCHAR,
            suicidio_tentativa BOOLEAN,
            fogueira_queda BOOLEAN,
            lareira_queda BOOLEAN,
            escarotomias_entrada BOOLEAN,
            intubacao_OT VARCHAR,
            "VMI_dias" INTEGER,
            "VNI" BOOLEAN,
            doente_id INTEGER,
            created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
            last_modified DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY(doente_id) REFERENCES doente (id)
        )
    """)
    
    # Copy existing data with audit timestamps
    op.execute("""
        INSERT INTO internamento_new (
            id, numero_internamento, data_entrada, data_alta, data_queimadura,
            origem_entrada, destino_alta, "ASCQ_total", lesao_inalatoria,
            mecanismo_queimadura, agente_queimadura, tipo_acidente,
            incendio_florestal, contexto_violento, suicidio_tentativa,
            fogueira_queda, lareira_queda, escarotomias_entrada,
            intubacao_OT, "VMI_dias", "VNI", doente_id, created_at, last_modified
        )
        SELECT 
            id, numero_internamento, data_entrada, data_alta, data_queimadura,
            origem_entrada, destino_alta, "ASCQ_total", lesao_inalatoria,
            mecanismo_queimadura, agente_queimadura, tipo_acidente,
            incendio_florestal, contexto_violento, suicidio_tentativa,
            fogueira_queda, lareira_queda, escarotomias_entrada,
            intubacao_OT, "VMI_dias", "VNI", doente_id, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
        FROM internamento
    """)
    
    # Drop old table and rename new one
    op.drop_table('internamento')
    op.execute("ALTER TABLE internamento_new RENAME TO internamento")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema - SQLite compatible version using table recreation."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Recreate doente table without audit fields
    op.execute("""
        CREATE TABLE doente_old (
            id INTEGER NOT NULL PRIMARY KEY,
            nome VARCHAR NOT NULL,
            numero_processo INTEGER NOT NULL UNIQUE,
            data_nascimento DATE,
            sexo VARCHAR NOT NULL,
            morada VARCHAR NOT NULL
        )
    """)
    
    # Copy existing data without audit fields
    op.execute("""
        INSERT INTO doente_old (id, nome, numero_processo, data_nascimento, sexo, morada)
        SELECT id, nome, numero_processo, data_nascimento, sexo, morada
        FROM doente
    """)
    
    # Drop new table and rename old one
    op.drop_table('doente')
    op.execute("ALTER TABLE doente_old RENAME TO doente")
    
    # Recreate internamento table without audit fields
    op.execute("""
        CREATE TABLE internamento_old (
            id INTEGER NOT NULL PRIMARY KEY,
            numero_internamento INTEGER NOT NULL UNIQUE,
            data_entrada DATE,
            data_alta DATE,
            data_queimadura DATE,
            origem_entrada INTEGER,
            destino_alta INTEGER,
            "ASCQ_total" INTEGER,
            lesao_inalatoria VARCHAR,
            mecanismo_queimadura INTEGER,
            agente_queimadura INTEGER,
            tipo_acidente INTEGER,
            incendio_florestal BOOLEAN,
            contexto_violento VARCHAR,
            suicidio_tentativa BOOLEAN,
            fogueira_queda BOOLEAN,
            lareira_queda BOOLEAN,
            escarotomias_entrada BOOLEAN,
            intubacao_OT VARCHAR,
            "VMI_dias" INTEGER,
            "VNI" BOOLEAN,
            doente_id INTEGER,
            FOREIGN KEY(doente_id) REFERENCES doente (id)
        )
    """)
    
    # Copy existing data without audit fields
    op.execute("""
        INSERT INTO internamento_old (
            id, numero_internamento, data_entrada, data_alta, data_queimadura,
            origem_entrada, destino_alta, "ASCQ_total", lesao_inalatoria,
            mecanismo_queimadura, agente_queimadura, tipo_acidente,
            incendio_florestal, contexto_violento, suicidio_tentativa,
            fogueira_queda, lareira_queda, escarotomias_entrada,
            intubacao_OT, "VMI_dias", "VNI", doente_id
        )
        SELECT 
            id, numero_internamento, data_entrada, data_alta, data_queimadura,
            origem_entrada, destino_alta, "ASCQ_total", lesao_inalatoria,
            mecanismo_queimadura, agente_queimadura, tipo_acidente,
            incendio_florestal, contexto_violento, suicidio_tentativa,
            fogueira_queda, lareira_queda, escarotomias_entrada,
            intubacao_OT, "VMI_dias", "VNI", doente_id
        FROM internamento
    """)
    
    # Drop new table and rename old one
    op.drop_table('internamento')
    op.execute("ALTER TABLE internamento_old RENAME TO internamento")
    
    # ### end Alembic commands ###
