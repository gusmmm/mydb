[project]
name = "mydb"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.5",
    "fastapi[standard]>=0.116.1",
    "icecream>=2.1.7",
    "ipykernel>=6.30.1",
    "pandas>=2.3.2",
    "pytest>=8.4.2",
    "pytest-cov>=6.3.0",
    "python-dotenv>=1.1.1",
    "requests>=2.32.5",
    "rich>=14.1.0",
    "ruff>=0.12.12",
    "sqlite-web>=0.6.4",
    "sqlmodel>=0.0.24",
    "taskipy>=1.14.1",
]

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = "-p no:warnings"
filterwarnings = [
    "ignore::ResourceWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev src/api.py --port 8088'
pre_test = 'task lint'
test = 'pytest -s -x --cov=src -vv'
post_test = 'coverage html'
