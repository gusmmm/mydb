{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Run Alembic Upgrade",
			"type": "shell",
			"command": "alembic upgrade head",
			"group": "build"
		},
		{
			"label": "Run Alembic Upgrade via UV",
			"type": "shell",
			"command": "uv run alembic upgrade head",
			"group": "build"
		},
		{
			"label": "Check Database Schema",
			"type": "shell",
			"command": "uv run python -c \"from src.db import engine; from sqlalchemy import text; conn = engine.connect(); result = conn.execute(text('PRAGMA table_info(doente)')); print('Doente columns:', [row for row in result]); result = conn.execute(text('PRAGMA table_info(internamento)')); print('Internamento columns:', [row for row in result]); conn.close()\"",
			"group": "test"
		},
		{
			"label": "Start FastAPI Server",
			"type": "shell",
			"command": "uv run uvicorn src.api:app --reload --port 8000",
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "Start FastAPI Server on Port 8001",
			"type": "shell",
			"command": "uv run uvicorn src.api:app --reload --port 8001",
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "Test Patient Creation with Audit Fields",
			"type": "shell",
			"command": "curl -X POST http://127.0.0.1:8001/doentes/ -H \"Content-Type: application/json\" -d '{\"nome\": \"Audit Test Patient\", \"numero_processo\": 12345, \"sexo\": \"M\", \"morada\": \"Test Address\", \"data_nascimento\": \"1990-01-01\"}'",
			"group": "test"
		},
		{
			"label": "Simple Patient Creation Test",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/doentes/' -H 'Content-Type: application/json' -d '{\"nome\": \"Test Patient\", \"numero_processo\": 99999, \"sexo\": \"M\", \"morada\": \"Test Street\"}'",
			"group": "test"
		},
		{
			"label": "Test API Without Trailing Slash",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/doentes' -H 'Content-Type: application/json' -d '{\"nome\": \"Test Patient\", \"numero_processo\": 88888, \"sexo\": \"M\", \"morada\": \"Test Street\"}'",
			"group": "test"
		},
		{
			"label": "Test Get All Patients",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/doentes'",
			"group": "test"
		},
		{
			"label": "Test Internamento Creation with Audit Fields",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/internamentos' -H 'Content-Type: application/json' -d '{\"numero_internamento\": 77777, \"doente_id\": 1, \"data_entrada\": \"2025-09-08\", \"ASCQ_total\": 15, \"lesao_inalatoria\": \"NAO\"}'",
			"group": "test"
		},
		{
			"label": "Check Current Patient Data",
			"type": "shell",
			"command": "sleep 2 && curl -X GET 'http://127.0.0.1:8001/doentes/88888'",
			"group": "test"
		},
		{
			"label": "Get Patient by Numero Processo",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/doentes/numero_processo/88888'",
			"group": "test"
		},
		{
			"label": "Get Internamento by Number",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/internamentos/77777'",
			"group": "test"
		},
		{
			"label": "Create Migration for TipoAcidente",
			"type": "shell",
			"command": "uv run alembic revision -m \"add tipoacidente table and foreign key relationship\"",
			"group": "build"
		},
		{
			"label": "Run TipoAcidente Migration",
			"type": "shell",
			"command": "uv run alembic upgrade head",
			"group": "build"
		},
		{
			"label": "Check Database Tables",
			"type": "shell",
			"command": "uv run python -c \"from src.db import engine; from sqlalchemy import text; conn = engine.connect(); result = conn.execute(text('SELECT name FROM sqlite_master WHERE type=\\\"table\\\"')); print('Tables:', [row[0] for row in result]); conn.close()\"",
			"group": "test"
		},
		{
			"label": "Mark Migration as Complete",
			"type": "shell",
			"command": "uv run alembic stamp head",
			"group": "build"
		},
		{
			"label": "Check TipoAcidente Table Schema",
			"type": "shell",
			"command": "uv run python -c \"from src.db import engine; from sqlalchemy import text; conn = engine.connect(); result = conn.execute(text('PRAGMA table_info(tipoacidente)')); print('TipoAcidente columns:', [row for row in result]); conn.close()\"",
			"group": "test"
		},
		{
			"label": "Create TipoAcidente 1",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/tipos_acidente' -H 'Content-Type: application/json' -d '{\"acidente\": \"Queimadura térmica\", \"tipo_acidente\": \"Doméstico\"}'",
			"group": "test"
		},
		{
			"label": "Create TipoAcidente 2",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/tipos_acidente' -H 'Content-Type: application/json' -d '{\"acidente\": \"Queimadura elétrica\", \"tipo_acidente\": \"Profissional\"}'",
			"group": "test"
		},
		{
			"label": "Create TipoAcidente 3",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/tipos_acidente' -H 'Content-Type: application/json' -d '{\"acidente\": \"Incêndio florestal\", \"tipo_acidente\": \"Natural\"}'",
			"group": "test"
		},
		{
			"label": "Get All TipoAcidente",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/tipos_acidente'",
			"group": "test"
		},
		{
			"label": "Test Internamento with TipoAcidente Foreign Key",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/internamentos' -H 'Content-Type: application/json' -d '{\"numero_internamento\": 66666, \"doente_id\": 1, \"data_entrada\": \"2025-09-08\", \"ASCQ_total\": 25, \"lesao_inalatoria\": \"SIM\", \"tipo_acidente\": 1}'",
			"group": "test"
		},
		{
			"label": "Test Invalid TipoAcidente Foreign Key",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/internamentos' -H 'Content-Type: application/json' -d '{\"numero_internamento\": 55555, \"doente_id\": 1, \"data_entrada\": \"2025-09-08\", \"ASCQ_total\": 10, \"lesao_inalatoria\": \"NAO\", \"tipo_acidente\": 999}'",
			"group": "test"
		},
		{
			"label": "Test GET Doente by ID",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/doentes/1'",
			"group": "test"
		},
		{
			"label": "Test PUT Update Doente",
			"type": "shell",
			"command": "curl -X PUT 'http://127.0.0.1:8001/doentes/1' -H 'Content-Type: application/json' -d '{\"nome\": \"Updated Patient Name\", \"numero_processo\": 88888, \"sexo\": \"F\", \"morada\": \"Updated Address\", \"data_nascimento\": \"1985-01-01\"}'",
			"group": "test"
		},
		{
			"label": "Test PUT Update Doente Fixed",
			"type": "shell",
			"command": "curl -X PUT 'http://127.0.0.1:8001/doentes/1' -H 'Content-Type: application/json' -d '{\"nome\": \"Updated Patient Name\", \"numero_processo\": 88888, \"sexo\": \"F\", \"morada\": \"Updated Address\", \"data_nascimento\": \"1985-01-01\"}'",
			"group": "test"
		},
		{
			"label": "Test PATCH Partial Update Doente",
			"type": "shell",
			"command": "curl -X PATCH 'http://127.0.0.1:8001/doentes/1' -H 'Content-Type: application/json' -d '{\"nome\": \"Partially Updated Name\"}'",
			"group": "test"
		},
		{
			"label": "Test DELETE Doente",
			"type": "shell",
			"command": "curl -X DELETE 'http://127.0.0.1:8001/doentes/2'",
			"group": "test"
		},
		{
			"label": "Verify Deletion - List All Doentes",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/doentes'",
			"group": "test"
		},
		{
			"label": "Test DELETE Non-existent Doente",
			"type": "shell",
			"command": "curl -X DELETE 'http://127.0.0.1:8001/doentes/999'",
			"group": "test"
		},
		{
			"label": "Create Migration for AgenteQueimadura",
			"type": "shell",
			"command": "uv run alembic revision -m \"add agentequeimadura table and foreign key relationship\"",
			"group": "build"
		},
		{
			"label": "Create AgenteQueimadura 1",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/agentes_queimadura' -H 'Content-Type: application/json' -d '{\"agente_queimadura\": \"Fogo direto\", \"nota\": \"Exposição direta ao fogo\"}'",
			"group": "test"
		},
		{
			"label": "Create AgenteQueimadura 2",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/agentes_queimadura' -H 'Content-Type: application/json' -d '{\"agente_queimadura\": \"Líquido quente\", \"nota\": \"Água fervente, óleo quente, etc.\"}'",
			"group": "test"
		},
		{
			"label": "Create AgenteQueimadura 3",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/agentes_queimadura' -H 'Content-Type: application/json' -d '{\"agente_queimadura\": \"Electricidade\", \"nota\": \"Queimadura eléctrica por contacto\"}'",
			"group": "test"
		},
		{
			"label": "Get All AgenteQueimadura",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/agentes_queimadura'",
			"group": "test"
		},
		{
			"label": "Get AgenteQueimadura by ID",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/agentes_queimadura/2'",
			"group": "test"
		},
		{
			"label": "Check Available Patients",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/doentes'",
			"group": "test"
		},
		{
			"label": "Test Internamento with AgenteQueimadura Foreign Key",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/internamentos' -H 'Content-Type: application/json' -d '{\"numero_internamento\": 44444, \"doente_id\": 1, \"data_entrada\": \"2025-09-09\", \"ASCQ_total\": 30, \"lesao_inalatoria\": \"SIM\", \"tipo_acidente\": 1, \"agente_queimadura\": 2}'",
			"group": "test"
		},
		{
			"label": "Test Invalid AgenteQueimadura Foreign Key",
			"type": "shell",
			"command": "curl -X POST 'http://127.0.0.1:8001/internamentos' -H 'Content-Type: application/json' -d '{\"numero_internamento\": 33333, \"doente_id\": 1, \"data_entrada\": \"2025-09-09\", \"ASCQ_total\": 10, \"lesao_inalatoria\": \"NAO\", \"agente_queimadura\": 999}'",
			"group": "test"
		},
		{
			"label": "Check AgenteQueimadura Table Schema",
			"type": "shell",
			"command": "uv run python -c \"from src.db import engine; from sqlalchemy import text; conn = engine.connect(); result = conn.execute(text('PRAGMA table_info(agentequeimadura)')); print('AgenteQueimadura columns:', [row for row in result]); result = conn.execute(text('PRAGMA table_info(internamento)')); print('Internamento columns:', [row for row in result]); conn.close()\"",
			"group": "test"
		},
		{
			"label": "Get Internamento with AgenteQueimadura Foreign Key",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/internamentos/44444'",
			"group": "test"
		},
		{
			"label": "Test Non-existent AgenteQueimadura",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/agentes_queimadura/999'",
			"group": "test"
		},
		{
			"label": "Run AgenteQueimadura Tests",
			"type": "shell",
			"command": "uv run pytest tests/test_agentequeimadura.py -v",
			"group": "test"
		},
		{
			"label": "Run AgenteQueimadura Tests Fixed",
			"type": "shell",
			"command": "uv run pytest tests/test_agentequeimadura.py -v",
			"group": "test"
		},
		{
			"label": "Check Linting Errors",
			"type": "shell",
			"command": "uv run ruff check --no-fix",
			"group": "test"
		},
		{
			"label": "Final Linting Check",
			"type": "shell",
			"command": "uv run ruff check --no-fix",
			"group": "test"
		},
		{
			"label": "Run All Tests",
			"type": "shell",
			"command": "uv run pytest -v",
			"group": "test"
		},
		{
			"label": "Fix Init File Name",
			"type": "shell",
			"command": "mv tests/__initi__.py tests/__init__.py",
			"group": "build"
		},
		{
			"label": "Run All Tests with Summary",
			"type": "shell",
			"command": "uv run pytest -v --tb=short",
			"group": "test"
		},
		{
			"label": "Final API Verification",
			"type": "shell",
			"command": "curl -X GET 'http://127.0.0.1:8001/agentes_queimadura' | jq .",
			"group": "test"
		},
		{
			"label": "Test AgenteQueimadura with Fixed Connections",
			"type": "shell",
			"command": "uv run pytest tests/test_agentequeimadura.py -v",
			"group": "test"
		},
		{
			"label": "Test AgenteQueimadura Without ResourceWarnings",
			"type": "shell",
			"command": "uv run pytest tests/test_agentequeimadura.py -v -W ignore::ResourceWarning",
			"group": "test"
		},
		{
			"label": "Final Clean Test Run",
			"type": "shell",
			"command": "uv run pytest tests/test_agentequeimadura.py -v",
			"group": "test"
		},
		{
			"label": "Run Test Task with Coverage",
			"type": "shell",
			"command": "uv run task test",
			"group": "test"
		}
	]
}